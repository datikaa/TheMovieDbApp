//apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply plugin: 'kotlin-kapt'
//apply plugin: 'androidx.navigation.safeargs'
//apply plugin: 'dagger.hilt.android.plugin'

plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.ksp)
    alias(libs.plugins.kotlin.parcelize)
}


android {
    compileSdkVersion 32

    defaultConfig {
        applicationId "com.datikaa.themoviedbapp"
        minSdkVersion 27
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildTypes.each {
        Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())
        def tmdbApiKey = properties.getProperty("tmdb_api_key", "")

        it.buildConfigField 'String', "TMDB_API_KEY", tmdbApiKey

        it.resValue 'string', "api_key", tmdbApiKey

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.3.0-rc02'
    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation(libs.koin)
    implementation(libs.coil)
    implementation(libs.moshi)

    ksp(libs.moshi.codegen)

    implementation(libs.androidx.core)
    implementation(libs.androidx.activity)
    implementation(libs.androidx.appcompat)

    implementation(libs.lifecycle.viewmodel.compose)

    implementation(libs.constraintlayout)
    implementation(libs.activity.ktx)
    implementation(libs.activity.compose)
    implementation(libs.lifecycle.viewmodel.extensions)
    implementation(libs.lifecycle.viewmodel.ktx)

    implementation(libs.bundles.compose)
    implementation(libs.bundles.retrofit)
}
